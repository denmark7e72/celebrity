import { createClient } from '@supabase/supabase-js';

const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL!;
const supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!;

export const supabase = createClient(supabaseUrl, supabaseAnonKey);

// Database types
export interface Database {
  public: {
    Tables: {
      admin_users: {
        Row: {
          id: string;
          email: string;
          password_hash: string;
          name: string;
          role: 'admin' | 'super_admin';
          avatar_url: string | null;
          last_login: string | null;
          created_at: string;
          updated_at: string;
        };
        Insert: {
          id?: string;
          email: string;
          password_hash: string;
          name: string;
          role?: 'admin' | 'super_admin';
          avatar_url?: string | null;
          last_login?: string | null;
          created_at?: string;
          updated_at?: string;
        };
        Update: {
          id?: string;
          email?: string;
          password_hash?: string;
          name?: string;
          role?: 'admin' | 'super_admin';
          avatar_url?: string | null;
          last_login?: string | null;
          created_at?: string;
          updated_at?: string;
        };
      };
      categories: {
        Row: {
          id: string;
          name: string;
          slug: string;
          description: string | null;
          icon: string | null;
          color: string;
          sort_order: number;
          is_active: boolean;
          created_at: string;
          updated_at: string;
        };
        Insert: {
          id?: string;
          name: string;
          slug: string;
          description?: string | null;
          icon?: string | null;
          color?: string;
          sort_order?: number;
          is_active?: boolean;
          created_at?: string;
          updated_at?: string;
        };
        Update: {
          id?: string;
          name?: string;
          slug?: string;
          description?: string | null;
          icon?: string | null;
          color?: string;
          sort_order?: number;
          is_active?: boolean;
          created_at?: string;
          updated_at?: string;
        };
      };
      pages: {
        Row: {
          id: string;
          title: string;
          slug: string;
          description: string | null;
          meta_title: string | null;
          meta_description: string | null;
          status: 'draft' | 'published' | 'archived';
          featured_image: string | null;
          template: string;
          sort_order: number;
          created_at: string;
          updated_at: string;
        };
        Insert: {
          id?: string;
          title: string;
          slug: string;
          description?: string | null;
          meta_title?: string | null;
          meta_description?: string | null;
          status?: 'draft' | 'published' | 'archived';
          featured_image?: string | null;
          template?: string;
          sort_order?: number;
          created_at?: string;
          updated_at?: string;
        };
        Update: {
          id?: string;
          title?: string;
          slug?: string;
          description?: string | null;
          meta_title?: string | null;
          meta_description?: string | null;
          status?: 'draft' | 'published' | 'archived';
          featured_image?: string | null;
          template?: string;
          sort_order?: number;
          created_at?: string;
          updated_at?: string;
        };
      };
      content_blocks: {
        Row: {
          id: string;
          page_id: string | null;
          type: string;
          title: string | null;
          content: any;
          sort_order: number;
          is_active: boolean;
          created_at: string;
          updated_at: string;
        };
        Insert: {
          id?: string;
          page_id?: string | null;
          type: string;
          title?: string | null;
          content?: any;
          sort_order?: number;
          is_active?: boolean;
          created_at?: string;
          updated_at?: string;
        };
        Update: {
          id?: string;
          page_id?: string | null;
          type?: string;
          title?: string | null;
          content?: any;
          sort_order?: number;
          is_active?: boolean;
          created_at?: string;
          updated_at?: string;
        };
      };
      celebrities: {
        Row: {
          id: string;
          name: string;
          slug: string;
          bio: string | null;
          description: string | null;
          category_id: string | null;
          image_url: string | null;
          cover_image_url: string | null;
          price_range: string | null;
          rating: number;
          availability_status: 'available' | 'limited' | 'booked' | 'unavailable';
          verified: boolean;
          featured: boolean;
          social_media: any;
          contact_info: any;
          performance_details: any;
          tags: string[];
          location: string | null;
          languages: string[];
          awards: any;
          gallery_images: string[];
          videos: any;
          upcoming_events: any;
          booking_requirements: string | null;
          technical_requirements: string | null;
          sort_order: number;
          is_active: boolean;
          created_at: string;
          updated_at: string;
        };
        Insert: {
          id?: string;
          name: string;
          slug: string;
          bio?: string | null;
          description?: string | null;
          category_id?: string | null;
          image_url?: string | null;
          cover_image_url?: string | null;
          price_range?: string | null;
          rating?: number;
          availability_status?: 'available' | 'limited' | 'booked' | 'unavailable';
          verified?: boolean;
          featured?: boolean;
          social_media?: any;
          contact_info?: any;
          performance_details?: any;
          tags?: string[];
          location?: string | null;
          languages?: string[];
          awards?: any;
          gallery_images?: string[];
          videos?: any;
          upcoming_events?: any;
          booking_requirements?: string | null;
          technical_requirements?: string | null;
          sort_order?: number;
          is_active?: boolean;
          created_at?: string;
          updated_at?: string;
        };
        Update: {
          id?: string;
          name?: string;
          slug?: string;
          bio?: string | null;
          description?: string | null;
          category_id?: string | null;
          image_url?: string | null;
          cover_image_url?: string | null;
          price_range?: string | null;
          rating?: number;
          availability_status?: 'available' | 'limited' | 'booked' | 'unavailable';
          verified?: boolean;
          featured?: boolean;
          social_media?: any;
          contact_info?: any;
          performance_details?: any;
          tags?: string[];
          location?: string | null;
          languages?: string[];
          awards?: any;
          gallery_images?: string[];
          videos?: any;
          upcoming_events?: any;
          booking_requirements?: string | null;
          technical_requirements?: string | null;
          sort_order?: number;
          is_active?: boolean;
          created_at?: string;
          updated_at?: string;
        };
      };
      testimonials: {
        Row: {
          id: string;
          name: string;
          role: string | null;
          company: string | null;
          content: string;
          rating: number;
          image_url: string | null;
          featured: boolean;
          celebrity_id: string | null;
          is_active: boolean;
          created_at: string;
          updated_at: string;
        };
        Insert: {
          id?: string;
          name: string;
          role?: string | null;
          company?: string | null;
          content: string;
          rating?: number;
          image_url?: string | null;
          featured?: boolean;
          celebrity_id?: string | null;
          is_active?: boolean;
          created_at?: string;
          updated_at?: string;
        };
        Update: {
          id?: string;
          name?: string;
          role?: string | null;
          company?: string | null;
          content?: string;
          rating?: number;
          image_url?: string | null;
          featured?: boolean;
          celebrity_id?: string | null;
          is_active?: boolean;
          created_at?: string;
          updated_at?: string;
        };
      };
      bookings: {
        Row: {
          id: string;
          celebrity_id: string | null;
          client_name: string;
          client_email: string;
          client_phone: string | null;
          company_name: string | null;
          event_type: string;
          event_date: string;
          event_time: string | null;
          event_duration: string | null;
          venue_name: string | null;
          venue_address: string | null;
          venue_city: string | null;
          venue_state: string | null;
          venue_country: string | null;
          venue_zipcode: string | null;
          expected_attendees: number | null;
          budget_range: string | null;
          event_description: string | null;
          special_requirements: string | null;
          additional_services: any;
          status: 'pending' | 'confirmed' | 'cancelled' | 'completed';
          total_amount: number | null;
          deposit_amount: number | null;
          payment_status: 'pending' | 'partial' | 'paid' | 'refunded';
          notes: string | null;
          created_at: string;
          updated_at: string;
        };
        Insert: {
          id?: string;
          celebrity_id?: string | null;
          client_name: string;
          client_email: string;
          client_phone?: string | null;
          company_name?: string | null;
          event_type: string;
          event_date: string;
          event_time?: string | null;
          event_duration?: string | null;
          venue_name?: string | null;
          venue_address?: string | null;
          venue_city?: string | null;
          venue_state?: string | null;
          venue_country?: string | null;
          venue_zipcode?: string | null;
          expected_attendees?: number | null;
          budget_range?: string | null;
          event_description?: string | null;
          special_requirements?: string | null;
          additional_services?: any;
          status?: 'pending' | 'confirmed' | 'cancelled' | 'completed';
          total_amount?: number | null;
          deposit_amount?: number | null;
          payment_status?: 'pending' | 'partial' | 'paid' | 'refunded';
          notes?: string | null;
          created_at?: string;
          updated_at?: string;
        };
        Update: {
          id?: string;
          celebrity_id?: string | null;
          client_name?: string;
          client_email?: string;
          client_phone?: string | null;
          company_name?: string | null;
          event_type?: string;
          event_date?: string;
          event_time?: string | null;
          event_duration?: string | null;
          venue_name?: string | null;
          venue_address?: string | null;
          venue_city?: string | null;
          venue_state?: string | null;
          venue_country?: string | null;
          venue_zipcode?: string | null;
          expected_attendees?: number | null;
          budget_range?: string | null;
          event_description?: string | null;
          special_requirements?: string | null;
          additional_services?: any;
          status?: 'pending' | 'confirmed' | 'cancelled' | 'completed';
          total_amount?: number | null;
          deposit_amount?: number | null;
          payment_status?: 'pending' | 'partial' | 'paid' | 'refunded';
          notes?: string | null;
          created_at?: string;
          updated_at?: string;
        };
      };
      settings: {
        Row: {
          id: string;
          key: string;
          value: any;
          description: string | null;
          category: string;
          is_public: boolean;
          created_at: string;
          updated_at: string;
        };
        Insert: {
          id?: string;
          key: string;
          value: any;
          description?: string | null;
          category?: string;
          is_public?: boolean;
          created_at?: string;
          updated_at?: string;
        };
        Update: {
          id?: string;
          key?: string;
          value?: any;
          description?: string | null;
          category?: string;
          is_public?: boolean;
          created_at?: string;
          updated_at?: string;
        };
      };
      images: {
        Row: {
          id: string;
          filename: string;
          original_name: string;
          url: string;
          storage_path: string;
          alt_text: string | null;
          caption: string | null;
          file_size: number | null;
          mime_type: string | null;
          width: number | null;
          height: number | null;
          uploaded_by: string | null;
          created_at: string;
          updated_at: string;
        };
        Insert: {
          id?: string;
          filename: string;
          original_name: string;
          url: string;
          storage_path: string;
          alt_text?: string | null;
          caption?: string | null;
          file_size?: number | null;
          mime_type?: string | null;
          width?: number | null;
          height?: number | null;
          uploaded_by?: string | null;
          created_at?: string;
          updated_at?: string;
        };
        Update: {
          id?: string;
          filename?: string;
          original_name?: string;
          url?: string;
          storage_path?: string;
          alt_text?: string | null;
          caption?: string | null;
          file_size?: number | null;
          mime_type?: string | null;
          width?: number | null;
          height?: number | null;
          uploaded_by?: string | null;
          created_at?: string;
          updated_at?: string;
        };
      };
    };
  };
}

export type Tables<T extends keyof Database['public']['Tables']> = Database['public']['Tables'][T]['Row'];
export type Inserts<T extends keyof Database['public']['Tables']> = Database['public']['Tables'][T]['Insert'];
export type Updates<T extends keyof Database['public']['Tables']> = Database['public']['Tables'][T]['Update'];